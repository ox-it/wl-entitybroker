# this defines the entity description for membership
membership = Represents a user's membership in a location (site, group, etc.) in the system, works with the site/group entities and the user entities
membership.view.new = Add a user membership using the required userId, locationReference (siteRef), memberRole. Can also do a batch add using the 'userIds' param (an array of userId)
membership.view.delete = Note that the membership ID is formed by joining (userId):(locationReference with / replaced by :), e.g. "aaronz::site:mySiteId". This can also do a batch remove using the 'userIds' param (an array of userId)
membership.view.update = Note that the membership ID is formed by joining (userId):(locationReference with / replaced by :), e.g. "aaronz::site:mySiteId". Can only be used to change the role and make the membership inactive
membership.view.list = Retrieves a list of all site memberships for the current user, \
use includeSite (boolean) or includeGroup (boolean) to limit for the current user or send a 'userId' (String) to limit by user, \
use 'locationReferene' (String) (site or group reference) to limit the memberships to all for a specific location, \
use 'roleId' (String) to limit to a specific role in a location
membership.action.site = Allows for retrieval of all memberships for a site using a url like so: /membership/site/siteId
membership.action.group = Allows for retrieval of all memberships for a group using a url like so: /membership/group/groupId
