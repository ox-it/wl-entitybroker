<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <name>Sakai Entity Broker Implementation</name>
  <groupId>org.sakaiproject.entitybroker</groupId>
  <artifactId>entitybroker-impl</artifactId>
  <organization>
    <name>CARET, University of Cambridge</name>
    <url>http://www.caret.cam.ac.uk/</url>
  </organization>
  <inceptionYear>2007</inceptionYear>
  <packaging>jar</packaging>
<!-- the base is parent -->
  <parent>
    <artifactId>entitybroker</artifactId>
    <groupId>org.sakaiproject</groupId>
    <version>1.3.4-SNAPSHOT</version>
<!--entitybroker.version-->
  </parent>
  <properties>
    <sakai.generic-dao.version>[0.9.8,1.0)</sakai.generic-dao.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.sakaiproject.kernel</groupId>
      <artifactId>sakai-kernel-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.kernel</groupId>
      <artifactId>sakai-component-manager</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.kernel.util</groupId>
      <artifactId>sakai-entity-util</artifactId>
    </dependency>
<!-- internal dependencies -->
    <dependency>
      <groupId>org.sakaiproject.entitybroker</groupId>
      <artifactId>entitybroker-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.entitybroker</groupId>
      <artifactId>entitybroker-utils</artifactId>
    </dependency>
    <dependency>
      <groupId>org.sakaiproject.entitybroker</groupId>
      <artifactId>entitybroker-mocks</artifactId>
      <scope>test</scope>
<!-- for 2.0.6 compatibility, http://jira.codehaus.org/browse/MNG-2919 -->
    </dependency>
<!-- external dependencies -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring</artifactId>
    </dependency>
<!-- Data processing -->
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>1.3</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>xpp3</groupId>
      <artifactId>xpp3</artifactId>
      <version>1.1.3.3</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>stax</groupId>
      <artifactId>stax-api</artifactId>
      <version>1.0.1</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.0.1</version>
      <type>jar</type>
    </dependency>
<!-- for managing classloaders and reflection -->
<!--
        <dependency>
            <groupId>com.google.code.guice</groupId>
            <artifactId>guice</artifactId>
            <version>1.0</version>
            <type>jar</type>
            <scope>runtime</scope>
        </dependency>
-->
<!-- generic DAO -->
    <dependency>
      <groupId>org.sakaiproject</groupId>
      <artifactId>generic-dao</artifactId>
      <version>${sakai.generic-dao.version}</version>
    </dependency>
<!-- Commons JARS put in shared/lib by Sakai -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
    </dependency>
<!-- Sakai dependencies -->
<!--org.sakaiprojectsakai-authz-api-->
<!--org.sakaiprojectsakai-component-api-->
<!--org.sakaiprojectsakai-entity-api-->
<!--org.sakaiprojectsakai-event-api-->
<!--org.sakaiprojectsakai-site-api-->
<!--org.sakaiprojectsakai-tool-api-->
<!--org.sakaiprojectsakai-user-api-->
<!--org.sakaiprojectsakai-util-api-->
<!--org.sakaiprojectsakai-entity-util${sakai.version}-->
<!-- testing dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-mock</artifactId>
      <version>2.0.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>1.8.0.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>1.2_Java1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <resources>
      <resource>
        <directory>${basedir}/src/ddl</directory>
        <includes>
          <include>**/*.sql</include>
        </includes>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>${basedir}/src/java</directory>
        <includes>
          <include>**/*.xml</include>
          <include>**/*.properties</include>
        </includes>
        <filtering>false</filtering>
      </resource>
    </resources>
<!-- unit testing -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
<!-- 
					By default, the surefire plugin will automatically include all test classes with the following wildcard patterns:
					"**/Test*.java" - includes all of its subdirectory and all java filenames that start with "Test".
					"**/*Test.java" - includes all of its subdirectory and all java filenames that end with "Test".
					"**/*TestCase.java" - includes all of its subdirectory and all java filenames that end with "TestCase".
				-->
      </plugin>
    </plugins>
    <testResources>
      <testResource>
        <directory>${basedir}/src/ddl</directory>
        <includes>
          <include>**/*.sql</include>
        </includes>
      </testResource>
      <testResource>
        <directory>
					${basedir}/../pack/src/webapp/WEB-INF
				</directory>
        <includes>
          <include>spring-jdbc.xml</include>
        </includes>
      </testResource>
      <testResource>
        <directory>${basedir}/src/test</directory>
        <includes>
          <include>database-test.xml</include>
          <include>database.properties</include>
        </includes>
      </testResource>
    </testResources>
  </build>
</project>
