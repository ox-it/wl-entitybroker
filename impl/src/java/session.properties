# this defines the entity description for session
session = Represents a user or system session which is currently active, inactive sessions or information about inactive sessions cannot be accessed, \
the session is effectively immutable and removing it is the same as deactivating it, updating simply has the effect of refreshing it so it will not timeout
session.Deleteable = Deleting a session makes it immediately inactive and no long accessible (like calling Session.invalidate())
session.Updateable = Updating a session resets the timeout (like calling Session.setActive())
session.Resolvable = Accessing a session will refresh it unless you pass along a param called "auto" (the value of the param does not matter), \
this will allow you to get the info about a session without causing it to be updated
session.Createable = To initiate a new session, fire a create request with a '_username' and '_password' param set to the username and password of the \
user to create the session for, NOTE: admins may create sessions for any user by just sending a request with a valid session entity
session.redirect./{prefix}/{id}/norefresh = Allows for a nice URL for getting a session without causing a refresh
session.field.creationTime = millisecond time code of when the session was created
session.field.lastAccessedTime = millisecond time code of when the session was last refreshed
session.field.maxInactiveInterval = max seconds the session can be idle before automatic invalidation
session.field.userEid = the external id (typically username) of the user who owns this session